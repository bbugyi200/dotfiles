#!/bin/bash

set -e

# Check if a directory path was provided
if [[ $# -eq 0 ]]; then
  echo "Usage: pybash <directory_path> [python_script_args...]"
  echo "Example: pybash ~/lib/gai fix-test some_test.txt"
  exit 1
fi

PROJECT_DIR="$1"
shift # Remove the directory path from arguments

# Expand tilde to full path
PROJECT_DIR="${PROJECT_DIR/#\~/$HOME}"

# Check if directory exists
if [[ ! -d "$PROJECT_DIR" ]]; then
  echo "Error: Directory '$PROJECT_DIR' does not exist"
  exit 1
fi

# Check if requirements.txt exists in the directory
if [[ ! -f "$PROJECT_DIR/requirements.txt" ]]; then
  echo "Error: requirements.txt not found in '$PROJECT_DIR'"
  exit 1
fi

# Check if main.py exists in the directory
if [[ ! -f "$PROJECT_DIR/main.py" ]]; then
  echo "Error: main.py not found in '$PROJECT_DIR'"
  exit 1
fi

VENV_DIR="$PROJECT_DIR/venv"
REQUIREMENTS_FILE="$PROJECT_DIR/requirements.txt"
VENV_REQUIREMENTS_FILE="$VENV_DIR/requirements.txt"

# Function to create/recreate virtual environment
create_venv() {
  echo "Creating virtual environment in $VENV_DIR..."
  rm -rf "$VENV_DIR"
  python3 -m venv "$VENV_DIR"
  source "$VENV_DIR/bin/activate"
  python -m pip install -r "$REQUIREMENTS_FILE"
  # Copy requirements.txt to venv directory for future comparison
  cp "$REQUIREMENTS_FILE" "$VENV_REQUIREMENTS_FILE"
}

# Check if venv directory exists
if [[ ! -d "$VENV_DIR" ]]; then
  create_venv
else
  # Check if requirements.txt in venv matches the main requirements.txt
  if [[ ! -f "$VENV_REQUIREMENTS_FILE" ]] || ! cmp -s "$REQUIREMENTS_FILE" "$VENV_REQUIREMENTS_FILE"; then
    echo "Requirements.txt has changed, recreating virtual environment..."
    create_venv
  else
    source "$VENV_DIR/bin/activate"
  fi
fi

# Run the main.py script with remaining arguments
python "$PROJECT_DIR/main.py" "$@"
