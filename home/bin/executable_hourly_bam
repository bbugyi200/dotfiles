#!/bin/bash

source ~/lib/bugyi.sh

export USAGE_GRAMMAR=(
  "[-v]"
  "-h"
)

read -r -d '' DOC <<EOM
$(usage)

Run 'bam' command at the top of every hour.

Optional Arguments
------------------
-h | --help
    View this help message.

-v | --verbose
    Enable verbose output.

Examples
--------
hourly_bam            # Run in normal mode
hourly_bam -v         # Run with verbose output

EOM

set -e

DATE=${DATE:-date}
NUM_OF_BAMS=7

function run() {
  parse_cli_args "$@"

  log::info "Starting hourly 'bam' script runner..."
  log::info "Press Ctrl+C to stop"

  local extra_sleep_time=0
  while true; do
    # Sleep for a random time between 6 and 20 seconds
    local sleep_time=$((extra_sleep_time + 6 + RANDOM % 15))
    log::info "Sleeping for ${sleep_time} seconds before checking time again..."
    sleep ${sleep_time}

    # Check if we're at the top of the hour
    local current_min=$((10#$(${DATE} +%M))) # Convert to integer, removing leading zeros

    # If we're at the top of the hour, run 'bam'
    if [[ $current_min -eq 0 ]]; then
      log::info "Running 'bam' at $(${DATE})"
      for i in $(seq 1 $NUM_OF_BAMS); do
        bam
        if [[ $i -lt $NUM_OF_BAMS ]]; then
          sleep 0.2
        fi
      done

      extra_sleep_time=60
    else
      extra_sleep_time=0
    fi
  done
}

function parse_cli_args() {
  log::debug "Command-Line Arguments: ($*)"

  eval set -- "$(getopt -o "h,v" -l "help,verbose" -- "$@")"

  VERBOSE=0
  while [[ -n "$1" ]]; do
    case $1 in
    -h | --help)
      echo "${DOC}"
      exit 0
      ;;
    -v | --verbose)
      VERBOSE=$((VERBOSE + 1))
      ;;
    --)
      shift
      break
      ;;
    esac
    shift
  done

  if [[ "${VERBOSE}" -gt 1 ]]; then
    PS4='$LINENO: '
    set -x
  fi

  readonly DOC
  readonly VERBOSE
}

if [[ "${SCRIPTNAME}" == "$(basename "${BASH_SOURCE[0]}")" ]]; then
  run "$@"
fi
