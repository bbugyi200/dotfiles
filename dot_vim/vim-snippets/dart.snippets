priority 10

snippet elif
else if ($1) {
  ${2:${VISUAL}}
}
endsnippet

snippet for
for (final $1 in $2) {
  ${3:${VISUAL}}
}
endsnippet

snippet ife
if ($1) {
  $2
} else {
  ${3:${VISUAL}}
}
endsnippet

snippet in
@Input()
$0
endsnippet

snippet oninit
@override
Future<void> ngOnInit() async {
  ${1:${VISUAL}}
}
endsnippet

snippet out
@Output()
$0
endsnippet

snippet scuba
await scuba.diffScreenshot('$1');
await testBed.checkAccessibility();
endsnippet

snippet sup
await _setUp($1);
endsnippet

snippet supp
setUp(() => _setUp($1));
endsnippet

snippet sw
switch ($1) {
  case $2:
    $3;
    break;
  default:
    $0;
}
endsnippet

snippet td "typedef"
typedef $1 = ${2:bool} Function($3);
endsnippet

snippet tobo
// TODO($1): $0
endsnippet

snippet todc
// TODO(bbugyi): doc comment$0
endsnippet

snippet todo
// TODO: $0
endsnippet

snippet todu
// TODO(bbugyi): $0
endsnippet

snippet try
try {
  ${1:${VISUAL}}
} on ApiException catch (e) {
  _pageMessage.showApiException(e);
}
endsnippet

snippet xp
expect($1, $2);
endsnippet

snippet .test "Template for *_test.dart files"
import 'package:test/test.dart';

void main() {
  group($1, () {
    $0
  });
}
endsnippet
