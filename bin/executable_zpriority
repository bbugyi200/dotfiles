#!/bin/bash
#
# Pretty Print High ([#A]), Medium ([#B]), or Low ([#C]) priority zorg TODOs.

EXTRA_RG_ARGS=()
NON_WORK=(
  "any"
  "casa"
  "com"
  "gtd"
  "home"
  "kelly"
  "tv"
  "zorg"
  )

function rgzp() {
  local letter="$1"
  shift
  rg -g '!*_done*' -g '!*snippets*' -g '!*.git*' "${EXTRA_RG_ARGS[@]}" \
    "$(get_prio_regex $letter)" "$@" ~/org
}

function rgzp_count() {
  rgzp "$@" | wc -l | sed 's/^ *//'
}

function get_prio_regex() {
  local letter="$1"
  shift

  printf "^[o<>] \[\#%s\]" "${letter}"
}

function run() {
  if [[ "$1" == "-w" || "$1" == "--work-only" ]]; then
    shift
    for word in "${NON_WORK[@]}"; do
      EXTRA_RG_ARGS+=(-g "!act_$word*")
      EXTRA_RG_ARGS+=(-g "!prj_$word*")
    done
  fi
  if [[ "$1" == "-n" || "$1" == "--non-work-only" ]]; then
    shift
    for word in "${NON_WORK[@]}"; do
      EXTRA_RG_ARGS+=(-g "act_$word*")
      EXTRA_RG_ARGS+=(-g "prj_$word*")
    done
  fi

  if [[ -n "${1}" ]]; then
    local letter="$(echo $1 | tr '[:lower:]' '[:upper:]')"
    shift
  else
    local letter=A
  fi

  clear
  for f in $(rgzp $letter -l | sort -u); do
    echo -e " ${f/*org\//}\n###################################################"
    rg "$(get_prio_regex $letter)" $f
    echo
  done

  printf "\nFound %d [#%s] priority TODOs in %d files.\n" \
    "$(rgzp_count $letter)" \
    "${letter}" \
    "$(rgzp_count $letter -l)"
}

run "$@"
