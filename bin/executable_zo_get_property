#!/bin/bash

source bugyi.sh

USAGE_GRAMMAR=(
  "[-v]"
  "-h"
)

read -r -d '' DOC <<EOM
$(usage)

Completion for zorg properties.

Positional Arguments
--------------------

Optional Arguments
------------------
-h | --help
    View this help message.

-v | --verbose
    Enable verbose output. This option can be specified multiple times (e.g. -v, -vv, ...).

-V KEY | --get-values KEY
    Complete all values ever given for the KEY property.
EOM

function run() {
    parse_cli_args "$@"
    if [[ -n "${KEY}" ]]; then
      litecli -e "select distinct pl.value from propertylink pl join property p on (p.id=pl.prop_id) where p.name = '${KEY}'" ~/.local/share/zorg/zorg.db
    else 
      echo
    fi
}

function parse_cli_args() {
    dmsg "Command-Line Arguments: ($*)"

    eval set -- "$(getopt -o "h,v,V:" -l "help,verbose,get-values:" -- "$@")"

    # shellcheck disable=SC2154
    read -r -d '' HELP <<EOM || [[ -n "${HELP}" ]]
${DOC}
EOM

    VERBOSE=0
    while [[ -n "$1" ]]; do
        case $1 in
        -h | --help)
            echo "${HELP}"
            exit 0
            ;;
        -v | --verbose)
            VERBOSE=$((VERBOSE + 1))
            ;;
        -V | --get-values)
            KEY="$1"
            shift
            ;;
        --)
            shift
            break
            ;;
        esac
        shift
    done

    if [[ "${VERBOSE}" -gt 1 ]]; then
        PS4='$LINENO: '
        set -x
    fi

    readonly DOC
    readonly HELP
    readonly VERBOSE
}

if [[ "${SCRIPTNAME}" == "$(basename "${BASH_SOURCE[0]}")" ]]; then
    run "$@"
fi
