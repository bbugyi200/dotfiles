#!/bin/bash

source bugyi.sh

USAGE_GRAMMAR=(
  "[-v] [QUERY]"
  "-h"
)

readonly DEFAULT_QUERY=${BUG_DEFAULT_QUERY:-'a:me is:open modified>=today-30'}

read -r -d '' DOC <<EOM
$(usage)

Uses fzf and go/bugged to print the selected Buganizer bug's ID to stdout.

Positional Arguments
--------------------
QUERY
    (opt) The query to pass to the 'bugged search' command.

Optional Arguments
------------------
-h | --help
    View this help message.

-v | --verbose
    Enable verbose output. This option can be specified multiple times (e.g. -v, -vv, ...).
EOM

function run() {
    parse_cli_args "$@"
    bugged search $QUERY \
          | tail -n +2 \
          | fzf \
          | cut -f1 -d' '
}

function parse_cli_args() {
    dmsg "Command-Line Arguments: ($*)"

    eval set -- "$(getopt -o "h,v" -l "help,verbose" -- "$@")"

    # shellcheck disable=SC2154
    read -r -d '' HELP <<EOM || [[ -n "${HELP}" ]]
${DOC}
EOM

    QUERY="${QUERY:-$DEFAULT_QUERY}"
    VERBOSE=0
    while [[ -n "$1" ]]; do
        case $1 in
        -h | --help)
            echo "${HELP}"
            exit 0
            ;;
        -v | --verbose)
            VERBOSE=$((VERBOSE + 1))
            ;;
        --)
            shift
            break
            ;;
        esac
        shift
    done

    if [[ "${VERBOSE}" -gt 1 ]]; then
        PS4='$LINENO: '
        set -x
    fi

    if [[ $# -gt 1 ]]; then
      die "$(usage)" 2
    fi

    if [[ -n "$1" ]]; then
      QUERY="$1"
      shift
    fi

    readonly QUERY
    readonly DOC
    readonly HELP
    readonly VERBOSE
}

if [[ "${SCRIPTNAME}" == "$(basename "${BASH_SOURCE[0]}")" ]]; then
    run "$@"
fi
