#!/bin/bash

source bugyi.sh

USAGE_GRAMMAR=(
  "[-v] PREFIX_SYMBOL"
  "-h"
)

read -r -d '' DOC <<EOM
$(usage)

{% INSERT %}

Positional Arguments
--------------------
PREFIX_SYMBOL
    The symbol that prefixes the tag type we are interested in.
 

Optional Arguments
------------------
-h | --help
    View this help message.

-v | --verbose
    Enable verbose output. This option can be specified multiple times (e.g. -v, -vv, ...).

Examples
--------
get_tags @
get_tags #
get_tags +
get_tags %
EOM

function run() {
    parse_cli_args "$@"

    # 1st perl: Delete any words starting with a quote.
    # 2nd perl: Replace punctuation with spaces.
    # 3rd perl: Delete words not starting with tag symbol.
    # 4rd perl: Delete words not starting with [a-z].
    symbol="$1"
    shift
    perl -nE "print s{['\"][^ ]*}{}gr" $(find ~/org -name '*.zo') \
      | perl -nE "print s{[ ,.?!;:()']}{ }gr" \
      | perl -nE "print s{(\\s|^)[^ $symbol][^ ]*\\s}{ }gr if /$symbol[a-z][a-z_]*/" \
      | perl -nE "print s{$symbol[^ ]*[^a-z_ ][^ ]*\\s}{}gr" \
      | tr ' ' '\n' \
      | grep -E "^$symbol" \
      | cut -c2- \
      | sort -u
}

function parse_cli_args() {
    dmsg "Command-Line Arguments: ($*)"

    eval set -- "$(getopt -o "h,v" -l "help,verbose" -- "$@")"

    # shellcheck disable=SC2154
    read -r -d '' HELP <<EOM || [[ -n "${HELP}" ]]
${DOC}
EOM

    VERBOSE=0
    while [[ -n "$1" ]]; do
        case $1 in
        -h | --help)
            echo "${HELP}"
            exit 0
            ;;
        -v | --verbose)
            VERBOSE=$((VERBOSE + 1))
            ;;
        --)
            shift
            break
            ;;
        esac
        shift
    done

    if [[ "${VERBOSE}" -gt 1 ]]; then
        PS4='$LINENO: '
        set -x
    fi

    readonly DOC
    readonly HELP
    readonly VERBOSE
}

if [[ "${SCRIPTNAME}" == "$(basename "${BASH_SOURCE[0]}")" ]]; then
    run "$@"
fi
