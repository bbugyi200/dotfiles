#!/bin/bash

source bugyi.sh

USAGE_GRAMMAR=(
  "[-v]"
  "-h"
)
WC="${WC:-wc}"

read -r -d '' DOC <<EOM
$(usage)

Validate that every Zorg project has at least one open TODO associated with it.

Optional Arguments
------------------
-h | --help
    View this help message.

-v | --verbose
    Enable verbose output. This option can be specified multiple times (e.g. -v, -vv, ...).
EOM

function run() {
    parse_cli_args "$@"
    local exit_code=0
    ZOMBIE_PROJECTS=()
    for project in $(zorg query 'S + W o @PRJ'); do
      log::info "Looking for TODOs associated with +%s" "${project}"
      if [[ "$(zorg query "W o (+${project} !@PRJ (f=act_* | f=tick_*) | @PRJ '+${project}_')" | ${WC} -l)" == "0" ]]; then
        exit_code=1
        log::debug "Bad project found: %s" "${project}"
        ZOMBIE_PROJECTS+=("${project}")
      fi
    done

    log::debug "Number of bad projects: %d" ${#ZOMBIE_PROJECTS[@]}
    if [[ ${#ZOMBIE_PROJECTS[@]} -ne 0 ]]; then
      printf 1>&2 "ZOMBIE PROJECTS FOUND!\n"
      local bad_project_filter="$(echo "+${ZOMBIE_PROJECTS[@]}" | perl -nE 'print s{\s([A-Za-z0-9])}{ | +\1}gr')"
      echo "# W o @PRJ (${bad_project_filter}) G file" > /tmp/zo_zombies.zoq
      zorg edit /tmp/zo_zombies.zoq
    fi
    return ${exit_code}
}

function parse_cli_args() {
    dmsg "Command-Line Arguments: ($*)"

    eval set -- "$(getopt -o "h,v" -l "help,verbose" -- "$@")"

    # shellcheck disable=SC2154
    read -r -d '' HELP <<EOM || [[ -n "${HELP}" ]]
${DOC}
EOM

    VERBOSE=0
    while [[ -n "$1" ]]; do
        case $1 in
        -h | --help)
            echo "${HELP}"
            exit 0
            ;;
        -v | --verbose)
            VERBOSE=$((VERBOSE + 1))
            ;;
        --)
            shift
            break
            ;;
        esac
        shift
    done

    if [[ "${VERBOSE}" -gt 1 ]]; then
        PS4='$LINENO: '
        set -x
    fi

    readonly DOC
    readonly HELP
    readonly VERBOSE
}

if [[ "${SCRIPTNAME}" == "$(basename "${BASH_SOURCE[0]}")" ]]; then
    run "$@"
fi
